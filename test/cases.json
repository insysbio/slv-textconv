{
  "slv-parse": [
    {
      "name": "header",
      "input": "DBSolve Optimum (new parser) 1 Jul 2006\r\nSLV25.00*\r\nkey\r\n#\r\n//! header1\r\n//!! header2\r\n//!!! header3\r\nlast comment\r\n#\r\n0\r\n<xml>\r\n</xml>\r\n",
      "expected": {
        "sourceFormat": "SLV",
        "content": {
          "header": "DBSolve Optimum (new parser) 1 Jul 2006\r,\nSLV25.00*",
          "map": [
            {
              "key": "key",
              "rawValue": [
                "\r\n//! header1 \r\n//!! header2 \r\n//!!! header3 "
              ],
              "parsedValue": [
                [
                  {
                    "type": "lineComment",
                    "header": 1,
                    "value": " header1 ",
                    "newLine": true
                  },
                  {
                    "type": "lineComment",
                    "header": 2,
                    "value": " header2 ",
                    "newLine": true
                  },
                  {
                    "type": "lineComment",
                    "header": 3,
                    "value": " header3",
                    "newLine": true
                  }
                ]
              ]
            },
            {
              "key": "last comment",
              "rawValue": [
                "\r\n0 \r\n<xml> \r\n</xml> "
              ],
              "parsedValue": [
                [
                  [],
                  {
                    "type": "string",
                    "value": "<xml> \r\n</xml> "
                  }
                ]
              ]
            }
          ]
        }
      }
    },
    {
      "name": "if-else",
      "input": "DBSolve Optimum (new parser) 1 Jul 2006\r\nSLV25.00*\r\nkey\r\n#\r\nif (C1>0) {k1=12;}\r\nelse {k1=0;}\r\n#\r\nif (C1==0) {\r\n  k2=13;k4=5;\r\n  if (C2<0){k3=2;}\r\n  else {k3=6;}\r\n}\r\nelse {\r\n  k3=0;\r\n  if (C2>0) {k3=5;}\r\n  else {k3=0;}\r\n  }\r\nlast comment\r\n#\r\n0\r\n<xml>\r\n</xml>\r\n",
      "expected": {
        "sourceFormat": "SLV",
        "content": {
          "header": "DBSolve Optimum (new parser) 1 Jul 2006\r,\nSLV25.00*",
          "map": [
            {
              "key": "key",
              "rawValue": [
                "\r\nif (C1>0) {k1=12;} \r\nelse {k1=0;} ",
                "\r\nif (C1==0) { \r\n  k2=13;k4=5; \r\n  if (C2<0){k3=2;} \r\n  else {k3=6;} \r\n} \r\nelse { \r\n  k3=0; \r\n  if (C2>0) {k3=5;} \r\n  else {k3=0;} \r\n  } "
              ],
              "parsedValue": [
                [
                  {
                    "type": "conditionExpression",
                    "condition": {
                      "lhs": "C1",
                      "rhs": "0",
                      "sign": ">"
                    },
                    "then": [
                      [
                        {
                          "type": "numeric",
                          "value": {
                            "lhs": "k1",
                            "rhs": "12",
                            "newLine": false
                          }
                        }
                      ]
                    ],
                    "else": [
                      [
                        {
                          "type": "numeric",
                          "value": {
                            "lhs": "k1",
                            "rhs": "0",
                            "newLine": false
                          }
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "type": "conditionExpression",
                    "condition": {
                      "lhs": "C1",
                      "rhs": "0",
                      "sign": "=="
                    },
                    "then": [
                      [
                        {
                          "type": "numeric",
                          "value": {
                            "lhs": "k2",
                            "rhs": "13",
                            "newLine": true
                          }
                        },
                        {
                          "type": "numeric",
                          "value": {
                            "lhs": "k4",
                            "rhs": "5",
                            "newLine": false
                          }
                        },
                        {
                          "type": "conditionExpression",
                          "condition": {
                            "lhs": "C2",
                            "rhs": "0",
                            "sign": "<"
                          },
                          "then": [
                            [
                              {
                                "type": "numeric",
                                "value": {
                                  "lhs": "k3",
                                  "rhs": "2",
                                  "newLine": false
                                }
                              }
                            ]
                          ],
                          "else": [
                            [
                              {
                                "type": "numeric",
                                "value": {
                                  "lhs": "k3",
                                  "rhs": "6",
                                  "newLine": false
                                }
                              }
                            ]
                          ]
                        }
                      ]
                    ],
                    "else": [
                      [
                        {
                          "type": "numeric",
                          "value": {
                            "lhs": "k3",
                            "rhs": "0",
                            "newLine": true
                          }
                        },
                        {
                          "type": "conditionExpression",
                          "condition": {
                            "lhs": "C2",
                            "rhs": "0",
                            "sign": ">"
                          },
                          "then": [
                            [
                              {
                                "type": "numeric",
                                "value": {
                                  "lhs": "k3",
                                  "rhs": "5",
                                  "newLine": false
                                }
                              }
                            ]
                          ],
                          "else": [
                            [
                              {
                                "type": "numeric",
                                "value": {
                                  "lhs": "k3",
                                  "rhs": "0",
                                  "newLine": false
                                }
                              }
                            ]
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            },
            {
              "key": "last comment",
              "rawValue": [
                "\r\n0 \r\n<xml> \r\n</xml> "
              ],
              "parsedValue": [
                [
                  [],
                  {
                    "type": "string",
                    "value": "<xml> \r\n</xml> "
                  }
                ]
              ]
            }
          ]
        }
      }
    },
    {
      "name": "linecomment",
      "input": "DBSolve Optimum (new parser) 1 Jul 2006\r\nSLV25.00*\r\nkey\r\n# //one newline comment\r\n//one line comment\r\n<?NE?><?one line commment?>\r\n<?NB?><?one line commment?>\r\nlast comment\r\n#\r\n0\r\n<xml>\r\n</xml>\r\n",
      "expected": {
        "sourceFormat": "SLV",
        "content": {
          "header": "DBSolve Optimum (new parser) 1 Jul 2006\r,\nSLV25.00*",
          "map": [
            {
              "key": "key",
              "rawValue": [
                " //one newline comment \r\n//one line comment \r\n<?NE?><?one line commment?> \r\n<?NB?><?one line commment?> "
              ],
              "parsedValue": [
                [
                  {
                    "type": "lineComment",
                    "header": 0,
                    "value": "one newline comment ",
                    "newLine": true
                  },
                  {
                    "type": "lineComment",
                    "header": 0,
                    "value": "one line comment ",
                    "newLine": true
                  },
                  {
                    "type": "lineComment",
                    "header": 0,
                    "value": "<?one line commment?> ",
                    "newLine": true
                  },
                  {
                    "type": "lineComment",
                    "header": 0,
                    "value": "<?one line commment?>",
                    "newLine": true
                  }
                ]
              ]
            },
            {
              "key": "last comment",
              "rawValue": [
                "\r\n0 \r\n<xml> \r\n</xml> "
              ],
              "parsedValue": [
                [
                  [],
                  {
                    "type": "string",
                    "value": "<xml> \r\n</xml> "
                  }
                ]
              ]
            }
          ]
        }
      }
    },
    {
      "name": "multylineComment",
      "input": "DBSolve Optimum (new parser) 1 Jul 2006\r\nSLV25.00*\r\nkey\r\n#\r\n/*multyline lineComment\r\nnext string\r\n*/\r\nlast comment\r\n#\r\n0\r\n<xml>\r\n</xml>\r\n",
      "expected": {
        "sourceFormat": "SLV",
        "content": {
          "header": "DBSolve Optimum (new parser) 1 Jul 2006\r,\nSLV25.00*",
          "map": [
            {
              "key": "key",
              "rawValue": [
                "\r\n/*multyline lineComment \r\nnext string \r\n*/ "
              ],
              "parsedValue": [
                [
                  {
                    "type": "multylineComment",
                    "value": "multyline lineComment \r\nnext string \r\n"
                  }
                ]
              ]
            },
            {
              "key": "last comment",
              "rawValue": [
                "\r\n0 \r\n<xml> \r\n</xml> "
              ],
              "parsedValue": [
                [
                  [],
                  {
                    "type": "string",
                    "value": "<xml> \r\n</xml> "
                  }
                ]
              ]
            }
          ]
        }
      }
    },
    {
      "name": "number",
      "input": "DBSolve Optimum (new parser) 1 Jul 2006\r\nSLV25.00*\r\nNumbeCase1 #2\r\nNumbeCase1\r\n#2\r\nNumbeCase1 #\r\n2\r\nlast comment\r\n#\r\n0\r\n<xml>\r\n</xml>\r\n",
      "expected": {
        "sourceFormat": "SLV",
        "content": {
          "header": "DBSolve Optimum (new parser) 1 Jul 2006\r,\nSLV25.00*",
          "map": [
            {
              "key": "NumbeCase1 ",
              "rawValue": [
                "2 "
              ],
              "parsedValue": [
                {
                  "type": "number",
                  "value": 2
                }
              ]
            },
            {
              "key": "NumbeCase1",
              "rawValue": [
                "2 "
              ],
              "parsedValue": [
                {
                  "type": "number",
                  "value": 2
                }
              ]
            },
            {
              "key": "NumbeCase1 ",
              "rawValue": [
                "\r\n2 "
              ],
              "parsedValue": [
                {
                  "type": "number",
                  "value": 2
                }
              ]
            },
            {
              "key": "last comment",
              "rawValue": [
                "\r\n0 \r\n<xml> \r\n</xml> "
              ],
              "parsedValue": [
                [
                  [],
                  {
                    "type": "string",
                    "value": "<xml> \r\n</xml> "
                  }
                ]
              ]
            }
          ]
        }
      }
    },
    {
      "name": "numbers",
      "input": "DBSolve Optimum (new parser) 1 Jul 2006\r\nSLV25.00*\r\nkey #1 2\r\n#1 2\r\n#\r\n2\r\n1\r\nStoichiometric Matrix\r\n#1 1 -1\r\n1 2 1\r\n2 2 -1\r\n0 0 0.0\r\n&\r\nlast comment\r\n#\r\n0\r\n<xml>\r\n</xml>\r\n",
      "expected": {
        "sourceFormat": "SLV",
        "content": {
          "header": "DBSolve Optimum (new parser) 1 Jul 2006\r,\nSLV25.00*",
          "map": [
            {
              "key": "key ",
              "rawValue": [
                "1 2 ",
                "1 2 ",
                "\r\n2 \r\n1 "
              ],
              "parsedValue": [
                {
                  "type": "arrayNumber",
                  "value": [
                    1,
                    2
                  ]
                },
                {
                  "type": "arrayNumber",
                  "value": [
                    1,
                    2
                  ]
                },
                {
                  "type": "arrayNumber",
                  "value": [
                    [
                      2
                    ],
                    [
                      1
                    ]
                  ]
                }
              ]
            },
            {
              "key": "Stoichiometric Matrix",
              "rawValue": [
                "1 1 -1 \r\n1 2 1 \r\n2 2 -1 \r\n0 0 0.0 \r\n& "
              ],
              "parsedValue": [
                {
                  "type": "arrayNumber",
                  "value": [
                    [
                      1,
                      1,
                      -1
                    ],
                    [
                      1,
                      2,
                      1
                    ],
                    [
                      2,
                      2,
                      -1
                    ],
                    [
                      0,
                      0,
                      0
                    ]
                  ]
                }
              ]
            },
            {
              "key": "last comment",
              "rawValue": [
                "\r\n0 \r\n<xml> \r\n</xml> "
              ],
              "parsedValue": [
                [
                  [],
                  {
                    "type": "string",
                    "value": "<xml> \r\n</xml> "
                  }
                ]
              ]
            }
          ]
        }
      }
    }
  ]
}